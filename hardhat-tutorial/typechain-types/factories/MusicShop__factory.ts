/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MusicShop, MusicShopInterface } from "../MusicShop";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "uid",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AlbumBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "albumUid",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
    ],
    name: "OrderDelivered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uid",
        type: "string",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "addAlbum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "albums",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uid",
        type: "string",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allAlbums",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uid",
            type: "string",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quantity",
            type: "uint256",
          },
        ],
        internalType: "struct MusicShop.Album[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "delivered",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orders",
    outputs: [
      {
        internalType: "string",
        name: "albumUid",
        type: "string",
      },
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "orderedAt",
        type: "uint256",
      },
      {
        internalType: "enum MusicShop.OrderStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118a6806100616000396000f3fe6080604052600436106100705760003560e01c8063c557f9791161004e578063c557f97914610109578063d96a094a14610132578063ea5df0591461014e578063ec34297a1461018f57610070565b80634b5e4108146100755780638da5cb5b1461009e578063a85c38ef146100c9575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610d2d565b6101ba565b005b3480156100aa57600080fd5b506100b3610398565b6040516100c09190610d9b565b60405180910390f35b3480156100d557600080fd5b506100f060048036038101906100eb9190610d2d565b6103be565b6040516101009493929190610ecc565b60405180910390f35b34801561011557600080fd5b50610130600480360381019061012b9190610f7d565b6104b3565b005b61014c60048036038101906101479190610d2d565b61068b565b005b34801561015a57600080fd5b5061017560048036038101906101709190610d2d565b610952565b604051610186959493929190611024565b60405180910390f35b34801561019b57600080fd5b506101a4610aa8565b6040516101b1919061121d565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461024a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102419061128b565b60405180910390fd5b6000600182815481106102605761025f6112ab565b5b9060005260206000209060040201905060018081111561028357610282610e55565b5b8160030160009054906101000a900460ff1660018111156102a7576102a6610e55565b5b036102e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102de90611326565b60405180910390fd5b60018160030160006101000a81548160ff0219169083600181111561030f5761030e610e55565b5b02179055508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16816000016040516103609190611449565b60405180910390207f0428dc7031c0c35b6cfc8c2573c1f2eecf691dcffacf2a33fd549f311ae5f29d60405160405180910390a35050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106103ce57600080fd5b90600052602060002090600402016000915090508060000180546103f190611375565b80601f016020809104026020016040519081016040528092919081815260200182805461041d90611375565b801561046a5780601f1061043f5761010080835404028352916020019161046a565b820191906000526020600020905b81548152906001019060200180831161044d57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a9061128b565b60405180910390fd5b60006040518060a00160405280600254815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200184815260200183815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000155602082015181600101908161063e9190611626565b5060408201518160020190816106549190611626565b50606082015181600301556080820151816004015550506002600081548092919061067e90611727565b9190505550505050505050565b60008082815481106106a05761069f6112ab565b5b90600052602060002090600502019050806003015434146106f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ed906117bb565b60405180910390fd5b600081600401541161073d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073490611827565b60405180910390fd5b80600401600081548092919061075290611847565b91905055506001604051806080016040528083600101805461077390611375565b80601f016020809104026020016040519081016040528092919081815260200182805461079f90611375565b80156107ec5780601f106107c1576101008083540402835291602001916107ec565b820191906000526020600020905b8154815290600101906020018083116107cf57829003601f168201915b505050505081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020016000600181111561082c5761082b610e55565b5b8152509080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001908161086d9190611626565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff021916908360018111156108ea576108e9610e55565b5b02179055505050423373ffffffffffffffffffffffffffffffffffffffff168260010160405161091a9190611449565b60405180910390207fe42b480ee660a78470e1b85e3dd92f3d137f19f9e17ff60a9151f87c1a3e2c9e60405160405180910390a45050565b6000818154811061096257600080fd5b906000526020600020906005020160009150905080600001549080600101805461098b90611375565b80601f01602080910402602001604051908101604052809291908181526020018280546109b790611375565b8015610a045780601f106109d957610100808354040283529160200191610a04565b820191906000526020600020905b8154815290600101906020018083116109e757829003601f168201915b505050505090806002018054610a1990611375565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4590611375565b8015610a925780601f10610a6757610100808354040283529160200191610a92565b820191906000526020600020905b815481529060010190602001808311610a7557829003601f168201915b5050505050908060030154908060040154905085565b60606000808054905067ffffffffffffffff811115610aca57610ac9611460565b5b604051908082528060200260200182016040528015610b0357816020015b610af0610cbe565b815260200190600190039081610ae85790505b50905060005b600080549050811015610cb65760008181548110610b2a57610b296112ab565b5b90600052602060002090600502016040518060a001604052908160008201548152602001600182018054610b5d90611375565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8990611375565b8015610bd65780601f10610bab57610100808354040283529160200191610bd6565b820191906000526020600020905b815481529060010190602001808311610bb957829003601f168201915b50505050508152602001600282018054610bef90611375565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1b90611375565b8015610c685780601f10610c3d57610100808354040283529160200191610c68565b820191906000526020600020905b815481529060010190602001808311610c4b57829003601f168201915b5050505050815260200160038201548152602001600482015481525050828281518110610c9857610c976112ab565b5b60200260200101819052508080610cae90611727565b915050610b09565b508091505090565b6040518060a0016040528060008152602001606081526020016060815260200160008152602001600081525090565b600080fd5b600080fd5b6000819050919050565b610d0a81610cf7565b8114610d1557600080fd5b50565b600081359050610d2781610d01565b92915050565b600060208284031215610d4357610d42610ced565b5b6000610d5184828501610d18565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d8582610d5a565b9050919050565b610d9581610d7a565b82525050565b6000602082019050610db06000830184610d8c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610df0578082015181840152602081019050610dd5565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e1882610db6565b610e228185610dc1565b9350610e32818560208601610dd2565b610e3b81610dfc565b840191505092915050565b610e4f81610cf7565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610e9557610e94610e55565b5b50565b6000819050610ea682610e84565b919050565b6000610eb682610e98565b9050919050565b610ec681610eab565b82525050565b60006080820190508181036000830152610ee68187610e0d565b9050610ef56020830186610d8c565b610f026040830185610e46565b610f0f6060830184610ebd565b95945050505050565b600080fd5b600080fd5b600080fd5b60008083601f840112610f3d57610f3c610f18565b5b8235905067ffffffffffffffff811115610f5a57610f59610f1d565b5b602083019150836001820283011115610f7657610f75610f22565b5b9250929050565b60008060008060008060808789031215610f9a57610f99610ced565b5b600087013567ffffffffffffffff811115610fb857610fb7610cf2565b5b610fc489828a01610f27565b9650965050602087013567ffffffffffffffff811115610fe757610fe6610cf2565b5b610ff389828a01610f27565b9450945050604061100689828a01610d18565b925050606061101789828a01610d18565b9150509295509295509295565b600060a0820190506110396000830188610e46565b818103602083015261104b8187610e0d565b9050818103604083015261105f8186610e0d565b905061106e6060830185610e46565b61107b6080830184610e46565b9695505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6110ba81610cf7565b82525050565b600082825260208201905092915050565b60006110dc82610db6565b6110e681856110c0565b93506110f6818560208601610dd2565b6110ff81610dfc565b840191505092915050565b600060a08301600083015161112260008601826110b1565b506020830151848203602086015261113a82826110d1565b9150506040830151848203604086015261115482826110d1565b915050606083015161116960608601826110b1565b50608083015161117c60808601826110b1565b508091505092915050565b6000611193838361110a565b905092915050565b6000602082019050919050565b60006111b382611085565b6111bd8185611090565b9350836020820285016111cf856110a1565b8060005b8581101561120b57848403895281516111ec8582611187565b94506111f78361119b565b925060208a019950506001810190506111d3565b50829750879550505050505092915050565b6000602082019050818103600083015261123781846111a8565b905092915050565b7f6e6f7420616e206f776e65720000000000000000000000000000000000000000600082015250565b6000611275600c83610dc1565b91506112808261123f565b602082019050919050565b600060208201905081810360008301526112a481611268565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f696e76616c696420737461747573000000000000000000000000000000000000600082015250565b6000611310600e83610dc1565b915061131b826112da565b602082019050919050565b6000602082019050818103600083015261133f81611303565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061138d57607f821691505b6020821081036113a05761139f611346565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546113d381611375565b6113dd81866113a6565b945060018216600081146113f8576001811461140d57611440565b60ff1983168652811515820286019350611440565b611416856113b1565b60005b8381101561143857815481890152600182019150602081019050611419565b838801955050505b50505092915050565b600061145582846113c6565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020601f8301049050919050565b600082821b905092915050565b6000600883026114dc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261149f565b6114e6868361149f565b95508019841693508086168417925050509392505050565b6000819050919050565b600061152361151e61151984610cf7565b6114fe565b610cf7565b9050919050565b6000819050919050565b61153d83611508565b6115516115498261152a565b8484546114ac565b825550505050565b600090565b611566611559565b611571818484611534565b505050565b5b818110156115955761158a60008261155e565b600181019050611577565b5050565b601f8211156115da576115ab816113b1565b6115b48461148f565b810160208510156115c3578190505b6115d76115cf8561148f565b830182611576565b50505b505050565b600082821c905092915050565b60006115fd600019846008026115df565b1980831691505092915050565b600061161683836115ec565b9150826002028217905092915050565b61162f82610db6565b67ffffffffffffffff81111561164857611647611460565b5b6116528254611375565b61165d828285611599565b600060209050601f831160018114611690576000841561167e578287015190505b611688858261160a565b8655506116f0565b601f19841661169e866113b1565b60005b828110156116c6578489015182556001820191506020850194506020810190506116a1565b868310156116e357848901516116df601f8916826115ec565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061173282610cf7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611764576117636116f8565b5b600182019050919050565b7f696e76616c696420707269636500000000000000000000000000000000000000600082015250565b60006117a5600d83610dc1565b91506117b08261176f565b602082019050919050565b600060208201905081810360008301526117d481611798565b9050919050565b7f6f7574206f662073746f636b2100000000000000000000000000000000000000600082015250565b6000611811600d83610dc1565b915061181c826117db565b602082019050919050565b6000602082019050818103600083015261184081611804565b9050919050565b600061185282610cf7565b915060008203611865576118646116f8565b5b60018203905091905056fea264697066735822122051bc2ef6faae15abcf727a25f277175e1d2235ab104a77b934495c5f56b3cdda64736f6c63430008110033";

type MusicShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MusicShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MusicShop__factory extends ContractFactory {
  constructor(...args: MusicShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MusicShop> {
    return super.deploy(overrides || {}) as Promise<MusicShop>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MusicShop {
    return super.attach(address) as MusicShop;
  }
  override connect(signer: Signer): MusicShop__factory {
    return super.connect(signer) as MusicShop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MusicShopInterface {
    return new utils.Interface(_abi) as MusicShopInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MusicShop {
    return new Contract(address, _abi, signerOrProvider) as MusicShop;
  }
}
